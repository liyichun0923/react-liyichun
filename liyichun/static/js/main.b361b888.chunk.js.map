{"version":3,"sources":["Todolist/TodeItem.js","Todolist/Todolist.js","index.js"],"names":["TodoItem","props","deleteItem","bind","this","handleDelete","index","item","test","style","width","marginBottom","marginRight","name","type","value","onClick","float","Component","defaultProps","Todolist","count1","setState","prevState","list","splice","state","inputValue","n","handleChange","handleSubmit","keypress","count","e","nativeEvent","keyCode","input","map","key","backgroundColor","height","color","fontSize","paddingLeft","paddingRight","borderRadius","id","placeholder","onChange","ref","onKeyUp","paddingTop","div","handleHtml","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b361b888.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TodoItem extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    } \r\n\r\n    \r\n    deleteItem () {\r\n        const { handleDelete, index } = this.props;\r\n        handleDelete(index);\r\n    }\r\n\r\n    render () {\r\n        const { item, test } = this.props;\r\n        return (\r\n                <div style={{width:600,marginBottom:20}}>\r\n                    <span style={{width:500,marginRight:30}}>\r\n                        <input name=\"l1\" type=\"checkbox\" value={item,test} />{item} {test}\r\n                    </span>\r\n                    <button onClick={this.deleteItem} style={{float:\"right\",width:70}}>删除</button>\r\n                </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\nTodoItem.propTypes = {\r\n    item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    index: PropTypes.number,\r\n    handleDelete: PropTypes.func,\r\n    test: PropTypes.string.isRequired\r\n};\r\n\r\nTodoItem.defaultProps = {\r\n    test: ' '\r\n};","import React, { Component } from 'react';\nimport TodoItem from './TodeItem';\n\nexport default class Todolist extends Component {\n    constructor (props) {\n        super(props);\n\n        //当state或props改变时，render函数重新执行\n        this.state = {\n            inputValue: '',\n            list: [],\n            n : 0\n        };\n\n        //输入框输入内容\n        this.handleChange = this.handleChange.bind(this);\n        //提交，添加进列表\n        this.handleSubmit = this.handleSubmit.bind(this);\n        //删除当前点击项\n        this.handleDelete = this.handleDelete.bind(this);\n        //回车事件\n        this.keypress = this.keypress.bind(this);\n        //计数事件\n        this.count = this.count.bind(this);//回车键n+1\n        this.count1 = this.count1.bind(this);//删除键n-1\n\n    }\n\n    //添加回车事件\n    keypress (e){\n        if(e.nativeEvent.keyCode === 13){\n            this.handleSubmit();\n            this.count();\n        }\n    }\n\n    //input输入改变\n    handleChange () {\n        this.setState(() => ({\n            inputValue: this.input.value\n        }));\n    }\n    \n    //提交添加UI列表\n    handleSubmit () {\n        this.setState((prevState) => ({\n            list: [...prevState.list, prevState.inputValue],\n            inputValue: ''\n        }));\n    }\n\n    //计数\n    count () {\n        this.setState((state)=>({\n            n:state.n+1\n        }))\n    }\n    count1 () {\n        this.setState((state)=>({\n            n:state.n-1\n        }))\n    }\n\n    //删除当前点击item\n    handleDelete =  (index)=>{\n        this.count1();\n        this.setState((prevState) => {\n            const list = [...prevState.list];\n            list.splice(index, 1);\n            return {\n                list: list\n            }\n        });\n    }\n\n    //添加列表页面\n    handleHtml () {\n        const list = [...this.state.list];\n        return list.map((item, index) => {\n            return (\n                <TodoItem\n                    item={item}\n                    key={item}\n                    index={index}\n                    handleDelete={this.handleDelete}\n                />\n            )\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div style={{backgroundColor:'#323232',width:'100%',height:55}}>\n                    <span style={{\n                        color:'#cdcdcd',\n                        fontSize:30,\n                        paddingLeft:400,\n                        paddingRight:180\n                        }} \n                    >ToDoList</span>\n                    <input \n                    style={{borderRadius:6,height:25,width:350}} \n                    id = 'inputValue'\n                    name=\"n1\"\n                    placeholder=\"添加ToDo\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.inputValue}\n                    ref={(input) => {this.input = input}}\n                    onKeyUp={this.keypress}/>\n                </div>    \n                <h1 style={{paddingLeft:400,width:600}}>\n                    正在进行\n                    <span style={{float:'right',fontSize:20,paddingTop:5}}>{this.state.n}</span>\n                </h1>\n                <div style={{paddingLeft:400}} ref={(div) => {this.div = div}}>\n                    {\n                        this.handleHtml()\n                    }\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import ReactDOM from 'react-dom';\nimport React,{Component} from 'react';\nimport Todolist from './Todolist/Todolist';\nimport './index.css';\n\nReactDOM.render(\n    <Todolist/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}